openapi: 3.0.0
info:
  title: Example OpenApi 3 spec
  description: Has various paths with responses to use in testing
  version: 0.1.0
paths:
  /test/responseBody/string:
    get:
      responses:
        200:
          description: Response body should be a string
          content:
            application/json:
              schema:
                type: string
  /test/responseBody/boolean:
    get:
      responses:
        200:
          description: Response body should be a boolean
          content:
            application/json:
              schema:
                type: boolean
  /test/responseBody/object/depthOver2:
    get:
      responses:
        200:
          description: Response body should be a nested object
          content:
            application/json:
              schema:
                type: object
                required:
                  - a
                properties:
                  a:
                    type: object
                    required:
                      - b
                    properties:
                      b:
                        type: object
                        required:
                          - c
                        properties:
                          c:
                            type: string
  /test/responseBody/object/withMultipleProperties:
    get:
      responses:
        200:
          description: Response body should be an object with multiple string properties
          content:
            application/json:
              schema:
                type: object
                required:
                  - property1
                  - property2
                properties:
                  property1:
                    type: string
                  property2:
                    type: string
  /test/responseBody/referencesSchemaObject/simple:
    get:
      responses:
        200:
          description: Response body references a simple schema object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringSchema'
  /test/responseBody/empty:
    get:
      responses:
        204:
          description: No response body
  /test/responseReferencesResponseDefinitionObject:
    get:
      responses:
        200:
          $ref: '#/components/responses/SimpleResponseDefinitionObject'
  /test/multipleResponsesDefined:
    get:
      responses:
        201:
          description: Response body should be a string
          content:
            application/json:
              schema:
                type: string
        202:
          description: Response body should be an integer
          content:
            application/json:
              schema:
                type: integer
        203:
          description: No response body
  /test/queryParams:
    get:
      responses:
        204:
          description: No response body
  /test/pathParams/{exampleParam}:
    get:
      parameters:
        - in: path
          name: exampleParam
          required: true
          schema:
            type: string
      responses:
        204:
          description: No response body
  /test/multiplePathParams/{param1}/{param2}:
    get:
      parameters:
        - in: path
          name: param1
          required: true
          schema:
            type: string
        - in: path
          name: param2
          required: true
          schema:
            type: string
      responses:
        204:
          description: No response body
  /test/pathAndQueryParams/{examplePathParam}:
    get:
      parameters:
        - in: path
          name: examplePathParam
          required: true
          schema:
            type: string
      responses:
        204:
          description: No response body
  /test/responseStatus:
    get:
      responses:
        200:
          description: No response body
        204:
          description: No response body
  /test/HTTPMethod:
    get:
      responses:
        204:
          description: No response body
    post:
      responses:
        204:
          description: No response body
  /test/header/application/json/and/responseBody/string:
    get:
      responses:
        200:
          description: Response header is application/json, and response body is a string
          content:
            application/json:
              schema:
                type: string
  /test/header/application/json/and/responseBody/emptyObject:
    get:
      responses:
        200:
          description: Response header is application/json, and response body is an empty object. (Used to test that res.text is populated)
          content:
            application/json:
              schema:
                type: object
  /test/header/application/json/and/responseBody/boolean:
    get:
      responses:
        200:
          description: Response header is application/json, and response body is a boolean.
          content:
            application/json:
              schema:
                type: boolean
  /test/header/application/json/and/responseBody/nullable:
    get:
      responses:
        200:
          description: Response header is application/json, and response body is nullable.
          content:
            application/json:
              schema:
                type: object
                nullable: true
  /test/header/text/html:
    get:
      responses:
        200:
          description: Response header is text/html, and response body or text is a string
          content:
            text/html:
              schema:
                type: string
  /test/no/content-type/header/and/no/response/body:
    get:
      responses:
        204:
          description: No content-type response header, and there is no response body
  /test/matchNonTemplatedPathInsteadOfTemplatedPath/{templatedPath}:
    get:
      responses:
        200:
          description: Response body should be a number
          content:
            application/json:
              schema:
                type: number
  /test/matchNonTemplatedPathInsteadOfTemplatedPath/nonTemplatedPath:
    get:
      responses:
        200:
          description: Response body should be a string
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    StringSchema:
      type: string
  responses:
    SimpleResponseDefinitionObject:
      description: Response body should be a string
      content:
        application/json:
          schema:
            type: string
